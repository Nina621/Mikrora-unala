/*
Naslov: MIKRORAÈUNALA - Programiranje mikrokontrolera porodice
Atmel u programskom okruženju Atmel Studio 6
Autori: Zoran Vrhovski, Marko Miletiæ

*/

#include "AVR lib/AVR_lib.h"
#include <avr/io.h>
#include "LCD/lcd.h"
#include <avr/interrupt.h>
#include <util/delay.h>
#include "ADC/timer.h"
#include "ADC/adc.h"

uint16_t brojac_int0;
float okr;
float lux=0.00,ADC_value=0.0048828125,LDR_value;

void readValueLDR(){
	LDR_value = adc_read_10bit(6);
	lux = (250.000000/ (ADC_value * LDR_value)) -50.000000;
}

// prekidna rutina za INT0
ISR(INT0_vect) 
{
	brojac_int0++;
}

// prekidna rutina za timer0
ISR(TIMER0_OVF_vect){ // prekidna rutina za timer0
	TCNT0=100;
	//okr = brojac_int0 /360.0 *10;
	brojac_int0 = 0;
}

// prekidna rutina za timer1
ISR(TIMER1_OVF_vect){
	TCNT1 = 64754;

	readValueLDR();
}


void inicijalizacija(){
	
	// oba brida generiraju prekid INT0
	MCUCR |= (1 << ISC00); // ISC00 = 1
	MCUCR |= (0 << ISC01); // ISC01 = 0

	GICR |= (1 << INT0); // omogu?en vanjski prekid INT0
	
	////normalan na?in rada timer0
	TCCR0 |= (0 << WGM01) | (0 << WGM00);
	//F_CPU / 1024
	TCCR0 |= (1 << CS02) | (0 << CS01) | (1 << CS00);
	//prekid timer0
	TIMSK |= (1 << TOIE0);
	
	//normalan na?in rada timer1
	TCCR1A |= (0 << WGM10) | (0 << WGM11);
	TCCR1B |= (0 << WGM12) | (0 << WGM13) ;
	//F_CPU / 1024
	TCCR1B |= (1 << CS12) | (0 << CS11) | (1 << CS10);
	//omogu?i prekid TOV1
	TIMSK |= (1 << TOIE1);
	
	sei(); // globalno omogu?enje prekida
	TCNT0=100;
	TCNT1 = 64754;
	
	DDRD |= (0 << PD2); // pin PD2 postavljen kao ulazni
	
	PORTD |= (1 << PD2); // uklju?en pritezni otpornik na PD2
	

	lcd_init(); // inicijalizacija lcd displeja
	adc_init(); // inicijalizacija AD pretvorbe
}

int main(void){
	
	inicijalizacija();
	
	while(1)
	{
		lcd_clrscr();
		lcd_home();
		lcd_print("Brzina = %d\n", brojac_int0);		
		lcd_print("S = %.2f%", lux);		
		_delay_ms(1000);
	}
	
	return 0;
}